name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build # Si tienes un script de build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test # Asegúrate de tener un script de test
          
      - name: Send test results to SonarQube
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }} -X POST "https://sonarqube.imaginamos.com/api/ce/submit?projectKey=my-project-key" -F "file=@sonar-report.xml" # Ajusta este comando según el formato de tu reporte

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to EKS
        run: |
          kubectl config use-context arn:aws:eks:us-east-1:123456789012:cluster/rappi-web-eks-cluster
          kubectl apply -f k8s/deployment.yaml
